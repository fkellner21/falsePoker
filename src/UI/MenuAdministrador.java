package UI;

import Controllers.ControladorMenuAdministrador;
import Dominio.Juego.Mesa;
import Dominio.Usuarios.Administrador;
import Utilidades.InformacionMenu;
import Utilidades.MostrarError;
import javax.swing.table.DefaultTableModel;

public class MenuAdministrador extends javax.swing.JDialog implements IVista<InformacionMenu> {

    ControladorMenuAdministrador controladorMenuAdministrador;

    public MenuAdministrador(java.awt.Frame parent, boolean modal, Administrador administrador) {
        super(parent, modal);
        initComponents();
        this.setTitle(administrador.getNombreCompleto());
        this.controladorMenuAdministrador = new ControladorMenuAdministrador(this, administrador);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMesas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAgregarMesa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMasInformacion = new javax.swing.JTable();
        btnMostrarMasInformacion = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtError = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tablaMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Jugadores Minimos", "Apuesta Base", "Jugadores", "N° Mano", "Total Apostado", "Comision", "Total Recaudado", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaMesas);
        if (tablaMesas.getColumnModel().getColumnCount() > 0) {
            tablaMesas.getColumnModel().getColumn(0).setResizable(false);
            tablaMesas.getColumnModel().getColumn(1).setResizable(false);
            tablaMesas.getColumnModel().getColumn(2).setResizable(false);
            tablaMesas.getColumnModel().getColumn(3).setResizable(false);
            tablaMesas.getColumnModel().getColumn(4).setResizable(false);
            tablaMesas.getColumnModel().getColumn(5).setResizable(false);
            tablaMesas.getColumnModel().getColumn(6).setResizable(false);
            tablaMesas.getColumnModel().getColumn(7).setResizable(false);
            tablaMesas.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Panel Administrador");

        btnAgregarMesa.setText("Agregar nueva mesa");
        btnAgregarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMesaActionPerformed(evt);
            }
        });

        tablaMasInformacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de mano", "Cantidad de Jugadores", "Total apostado en mano", "Estado de la mano", "Ganador", "Figura Ganadora"
            }
        ));
        jScrollPane2.setViewportView(tablaMasInformacion);

        btnMostrarMasInformacion.setText("Mostrar mas información");
        btnMostrarMasInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarMasInformacionActionPerformed(evt);
            }
        });

        txtError.setEditable(false);
        txtError.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        txtError.setEnabled(false);
        jScrollPane3.setViewportView(txtError);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(496, 496, 496)
                                .addComponent(btnAgregarMesa))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(423, 423, 423)
                                .addComponent(jLabel1)))
                        .addGap(393, 393, 393))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMostrarMasInformacion))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1082, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1082, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(btnAgregarMesa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMostrarMasInformacion)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controladorMenuAdministrador.desloguear();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void btnAgregarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMesaActionPerformed
        AgregarMesa ventana = new AgregarMesa(this, false, controladorMenuAdministrador);
        ventana.setVisible(true);
    }//GEN-LAST:event_btnAgregarMesaActionPerformed

    private void btnMostrarMasInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarMasInformacionActionPerformed
        int index = tablaMesas.getSelectedRow();
        txtError.setVisible(false);
        txtError.setText("");
        controladorMenuAdministrador.obtenerMasInformacionMesa(this, index);
    }//GEN-LAST:event_btnMostrarMasInformacionActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMesa;
    private javax.swing.JButton btnMostrarMasInformacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaMasInformacion;
    private javax.swing.JTable tablaMesas;
    private javax.swing.JTextPane txtError;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cargarDatos(InformacionMenu informacion) {
        DefaultTableModel model = (DefaultTableModel) tablaMesas.getModel();
        model.setRowCount(0);
        for (Mesa mesa : informacion.getMesas()) {
            Object[] row = {mesa.getNumero(), mesa.getMinimoDeJugadores(), mesa.getApuestaBase(),
                mesa.cantidadDeJugadores(), mesa.getNumeroManoActual(), mesa.getTotalApostado(), mesa.getPorcentajeComision(),
                mesa.getTotalRecaudado(), mesa.getEstadoMesa()};

            model.addRow(row);
        }
        limpiarInformacionAdicional();
    }

    @Override
    public void mostrarError(String mensaje) {
        MostrarError.MostrarError(txtError, mensaje);
    }

    @Override
    public void cargarInformacionAdicional(InformacionMenu informacion) {
        String nombreJugador = "";

        if (informacion.getJugadorGanador() != null) {
            nombreJugador = informacion.getJugadorGanador().getNombreCompleto();
        }

        DefaultTableModel model = (DefaultTableModel) tablaMasInformacion.getModel();
        model.setRowCount(0);
        Object[] row = {informacion.getMesa().getNumeroManoActual(), informacion.getMesa().cantidadDeJugadores(), informacion.getMesa().obtenerPozo(),
            informacion.getMesa().obtenerEstadoManoMesa(), informacion.getMesa().nombreDelGanador(), informacion.getMesa().getFiguraGanadora()};

        model.addRow(row);
    }
    
        public void limpiarInformacionAdicional() {
        String vacio = "";

        DefaultTableModel model = (DefaultTableModel) tablaMasInformacion.getModel();
        model.setRowCount(0);
        Object[] row = {vacio, vacio, vacio,
            vacio, vacio, vacio};

        model.addRow(row);
    }
}
